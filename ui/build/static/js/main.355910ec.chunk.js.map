{"version":3,"sources":["components/Input.js","components/Login/index.js","components/Vitals/index.js","components/Reports/util.js","components/Reports/CompareChart.js","components/Text.js","components/Reports/index.js","components/Main/index.js","components/Patients/index.js","components/Medications/index.js","components/Medications/util.js","components/Home/index.js","mui-theme.js","App.js","serviceWorker.js","index.js"],"names":["Input","styled","input","_templateObject","BaseInput","_templateObject2","InputContainer","div","_templateObject3","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogin","evt","_this$state","state","email","password","loggedIn","window","LoginController","authenticate","onNotification","preventDefault","onLoggedIn","JSON","parse","getUserByEmail","handleCreateAccount","_this$state2","user","firstName","lastName","role","id","uuidv4","createUser","stringify","setState","creatingAccount","handleToggleLogin","showLogo","_this2","setTimeout","_this3","_this$state3","username","classes","react_default","a","createElement","Wrapper","framer_motion_es","initial","y","opacity","animate","transition","duration","ease","LogoContainer","svg","xmlns","viewBox","className","path","d","variants","icon","default","fill","SplashTitle","delay","Card","LoginContainer","onSubmit","Fragment","Person_default","type","required","maxLength","minLength","placeholder","value","onChange","target","Email_default","VpnKey_default","onKeyUp","keyCode","handleSignUp","Options","Button","root","loginButton","color","variant","onClick","Component","Login_templateObject","Login_templateObject2","h3","Login_templateObject3","form","_templateObject4","_templateObject5","hidden","pathLength","visible","withStyles","width","Vitals","handleSubmitVitals","weight","bodyTemp","height","bpSystolic","bpDiastolic","respRate","pulseBPM","PatientController","setUserVitals","onVitalsUpdate","vitals","hasOwnProperty","_this$props$vitals","vitalsString","getUserVitals","Vitals_Wrapper","Fields","TextField","label","helperText","vitalsInput","inputProps","Vitals_Options","vitalsButton","Vitals_templateObject","Vitals_templateObject2","Vitals_templateObject3","margin","generateChartData","chartName","labels","data","styles","datasets","objectSpread","CompareChart","_this$props","options","accentColor","theme","palette","primary","backgroundColor","main","borderColor","light","borderWidth","hoverBackgroundColor","dark","hoverBorderColor","CompareChart_Wrapper","es","title","values","CompareChart_templateObject","withTheme","Title","Text_templateObject","Text","p","Text_templateObject2","AlertText","Text_templateObject3","Reports","handlePrint","PrinterController","print","updateAlerts","NotificationsController","bmiAlert","calculateAdultBMI","toString","bpAlert","bloodPressureChecks","alerts","generateAlerts","map","alert","key","card","CardBody","includes","components_Text","Divider","averages","scales","xAxes","ticks","beginAtZero","min","Reports_Wrapper","Reports_CompareChart","Row","Reports_templateObject","hr","Reports_templateObject2","Reports_templateObject3","Reports_templateObject4","marginTop","marginLeft","Main","Main_CardBody","Main_Divider","generateNews","news","List","list","n","ListItem","link","button","listItem","ListItemContent","request","concat","then","prevProps","Main_Wrapper","length","Main_templateObject","Main_templateObject2","Main_templateObject3","Main_templateObject4","maxWidth","listItemButton","overflowX","overflowY","maxHeight","Patients","fetchPatientLists","patients","DoctorController","getAssignedPatients","allPatients","getAllPatients","patientsNotAssignedToMe","filter","patient","patientId","selectedAvailablePatient","generatePatientsDropdown","generateAssignedPatients","Patients_ListItemContent","IconButton","handleUnassignPatient","Delete_default","handleAssignPatient","setDoctorPatientMapping","doctorId","showAddPatient","Patients_Wrapper","Patients_CardBody","Tooltip","Fab","fab","Add_default","Dialog","open","onClose","DialogContent","dialogContent","Select","native","autoWidth","Patients_templateObject","Patients_templateObject2","Patients_templateObject3","Patients_templateObject4","selectLabel","marginRight","padding","position","bottom","right","Medications","allPatientsData","handleSelectPatient","fetchPatientMedications","getPatientMedications","generateMedications","selectedPatientMedications","med","name","Medications_ListItemContent","dosage","measurementUnit","count","setPatientMedication","patientData","getPatientById","patientMedsData","selectedPatient","selectedPatientData","handleMedicationSuggestion","allMeds","text","drugName","narrowedMeds","possibleMeds","m","toLowerCase","startsWith","splice","handleSelectMeasurement","selectedMeasurement","generateMedSuggestions","suggestionList","suggestionItem","handleAddMedication","parseInt","isPrescription","drugsList","toConsumableArray","Set","drugs","results","term","split","s","charAt","toUpperCase","substring","join","showAddMedication","Medications_Wrapper","Medications_CardBody","propertyIsEnumerable","Medications_Row","AutoComplete","components_Input","ref","inp","medInput","dosageInput","countInput","Medications_templateObject","Medications_templateObject2","Medications_templateObject3","Medications_templateObject4","Medications_templateObject5","display","flexFlow","zIndex","background","top","borderRadius","overflow","whiteSpace","textTransform","&:hover","Home","handleSetPage","page","handleVitalsChange","Home_Wrapper","NavigationBar","placement","selectedNavButton","navButton","Home_default","SupervisorAccount_default","ListAlt_default","Assignment_default","Equalizer_default","onLogOut","PowerSettingsNew_default","PageContainer","components_Main","components_Vitals","components_Reports","components_Patients","components_Medications","Home_templateObject","Home_templateObject2","Home_templateObject3","muiTheme","createMuiTheme","secondary","paper","overrides","MuiButton","containedSecondary","MuiPaper","MuiSnackbar","App","handleSnackbarClose","showSnack","handleShowSnack","message","arguments","undefined","snackData","handleLoggedIn","handleLogOut","MuiThemeProvider","App_Wrapper","components_Login","components_Home","Snackbar","anchorOrigin","vertical","horizontal","anchorOriginBottomRight","snackbar","autoHideDuration","ContentProps","aria-describedby","SnackMessage","App_templateObject","span","App_templateObject2","_ref","textAlign","justifyContent","alignItems","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.355910ec.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 8px 16px;\n  margin: 4px 0;\n  font-size: 16px;\n  line-height: 1.1em;\n  color: white;\n  background: rgba(30, 43, 49, 0.7);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 4px;\n  outline: none;\n  transition: all 150ms ease-in;\n  &:hover {\n    background: rgba(30, 43, 49, 0.8);\n  }\n  &:active {\n    background: rgba(30, 43, 49, 0.9);\n  }\n`;\n\nconst BaseInput = styled.input`\n  border: none;\n  color: white;\n  transition: all 150ms ease-in;\n  outline: none;\n  font-size: 16px;\n  background: transparent;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-flow: row;\n  border-radius: 4px;\n  color: white;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  margin: 8px 0;\n  background: rgba(30, 43, 49, 0.7);\n  border-radius: 4px;\n  padding: 8px;\n  transition: 150ms ease-in;\n  &:hover {\n    background: rgba(30, 43, 49, 0.8);\n  }\n  &:active {\n    background: rgba(30, 43, 49, 0.9);\n  }\n  width: 450px;\n  max-width: 95%;\n`;\n\nexport default Input;\n\nexport { BaseInput, InputContainer };\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VPNKeyIcon from '@material-ui/icons/VpnKey';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport { motion } from \"framer-motion\";\nimport { BaseInput, InputContainer } from '../Input';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      creatingAccount: false,\n      showLogo: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ showLogo: false }), 2900);\n  }\n\n  handleLogin = (evt) => {\n    const { email, password } = this.state;\n    const loggedIn = window.LoginController.authenticate(email, password);\n    this.props.onNotification(loggedIn ? 'Logged in!' : 'Login failed!', loggedIn ? 'message' : 'error');\n    if (loggedIn) {\n      evt.preventDefault();\n      this.props.onLoggedIn(JSON.parse(window.LoginController.getUserByEmail(email)));\n    }\n  }\n\n  handleCreateAccount = (evt) => {\n    const { firstName, lastName, email, password } = this.state;\n    const user =  { firstName, lastName, email, password, role: 'patient', id: uuidv4() };\n    const createdAccount = window.LoginController.createUser(JSON.stringify(user));\n    if (createdAccount) {\n      evt.preventDefault();\n      this.setState({ creatingAccount: false, password: '' });\n      this.props.onNotification('Account created!');\n    }\n  }\n\n  handleToggleLogin = () => {\n    const { creatingAccount } = this.state;\n    this.setState({ creatingAccount: !creatingAccount });\n  }\n\n  render() {\n    const { username, password, firstName, lastName, creatingAccount, showLogo } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Wrapper>\n        {\n          showLogo &&\n          <motion.div\n            initial={{ y: -70, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ duration: .4, ease: 'easeInOut' }}\n          >\n            <LogoContainer>\n              <motion.svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 100 100\"\n                className=\"item\"\n              >\n                <motion.path\n                  d=\"m-7,30.747825l37.675862,0l0,-38.997825l38.648282,0l0,38.997825l37.675866,0l0,40.004365l-37.675866,0l0,38.997821l-38.648282,0l0,-38.997821l-37.675862,0l0,-40.004365z\"\n                  variants={icon}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  transition={{\n                    default: { duration: 2, ease: \"easeInOut\" },\n                    fill: { duration: 2, ease: [1, 0, 0.8, 1] }\n                  }}\n                />\n              </motion.svg>\n            </LogoContainer>\n            <SplashTitle>iCare</SplashTitle>\n          </motion.div>\n        }\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{\n            ease: 'easeOut',\n            delay: 3\n          }}\n        >\n          <Card>\n            <LoginContainer onSubmit={creatingAccount ? this.handleCreateAccount : this.handleLogin}>\n            {\n                creatingAccount && (\n                  <React.Fragment>\n                    <InputContainer>\n                      <PersonIcon className=\"loginIcon\" />\n                      <BaseInput\n                        className=\"loginInput\"\n                        type=\"text\"\n                        required\n                        maxLength={80}\n                        minLength={1}\n                        placeholder=\"First Name\"\n                        value={firstName}\n                        onChange={(evt) => this.setState({ firstName: evt.target.value })}\n                      />\n                    </InputContainer>\n                    <InputContainer>\n                      <PersonIcon className=\"loginIcon\" />\n                      <BaseInput\n                        className=\"loginInput\"\n                        type=\"text\"\n                        required\n                        maxLength={80}\n                        minLength={1}\n                        placeholder=\"Last Name\"\n                        value={lastName}\n                        onChange={(evt) => this.setState({ lastName: evt.target.value })}\n                      />\n                    </InputContainer>\n                  </React.Fragment>\n                )\n              }\n              <InputContainer>\n                <EmailIcon className=\"loginIcon\" />\n                <BaseInput\n                  className=\"loginInput\"\n                  type=\"email\"\n                  required\n                  maxLength={80}\n                  placeholder=\"Email\"\n                  value={username}\n                  onChange={(evt) => this.setState({ email: evt.target.value })}\n                />\n              </InputContainer>\n              <InputContainer>\n                <VPNKeyIcon className=\"loginIcon\" />\n                <BaseInput\n                  className=\"loginInput\"\n                  type=\"password\"\n                  required\n                  maxLength={80}\n                  minLength={creatingAccount ? 8 : 1}\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(evt) => this.setState({ password: evt.target.value })}\n                  onKeyUp={(evt) => {\n                    if (evt.keyCode === 13) creatingAccount ? this.handleSignUp() : this.handleLogin();\n                  }}\n                />\n              </InputContainer>\n              <Options>\n                <Button\n                  classes={{ root: classes.loginButton }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  {\n                    creatingAccount ? 'Sign Up' : 'Login'\n                  }\n                </Button>\n                <Button\n                  color=\"default\"\n                  onClick={this.handleToggleLogin}\n                >\n                  {\n                    creatingAccount ? 'Login' : 'Create Account'\n                  }\n                </Button>\n              </Options>\n            </LoginContainer>\n          </Card>\n        </motion.div>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  loginButton: {\n    width: 150,\n  },\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding-top: 7em;\n`;\n\nconst LogoContainer = styled.div`\n  width: 150px;\n  height: 150px;\n  display: flex;\n  place-content: center;\n  margin-top: 3em;\n  overflow: hidden;\n  background: rgba(33,150,243,.8);\n  border-radius: 30px;\n`;\n\nconst SplashTitle = styled.h3`\n  text-align: center;\n  color: white;\n  font-weight: 300;\n  font-size: 24px;\n  margin: .5em 0;\n`;\n\nconst LoginContainer = styled.form`\n  margin: 16px;\n  margin-top: 24px;\n`;\n\nconst Options = styled.div`\n  padding-top: 8px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst icon = {\n  hidden: {\n    opacity: 0,\n    pathLength: 0,\n    fill: \"rgba(255, 255, 255, 0)\"\n  },\n  visible: {\n    opacity: 1,\n    pathLength: 1,\n    fill: \"rgba(255, 255, 255, 1)\"\n  }\n};\n\nexport default withStyles(styles)(Login);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass Vitals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weight: null,\n      bodyTemp: null,\n      height: null,\n      bpSystolic: null,\n      bpDiastolic: null,\n      respRate: null,\n      pulseBPM: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.vitals.hasOwnProperty('email')) {\n      const { weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM } = this.props.vitals;\n      this.setState({ weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM });\n    }\n    if (window.PatientController && !this.props.vitals.hasOwnProperty('email')) {\n      const vitalsString = window.PatientController.getUserVitals(this.props.user.email);\n      if (vitalsString) {\n        const vitals = JSON.parse(vitalsString);\n        if (vitals) {\n          const { weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM } = vitals;\n          this.setState({ weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM });\n          this.props.onVitalsUpdate({ weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM });\n        }\n      }\n    }\n  }\n\n  handleSubmitVitals = () => {\n    const { email } = this.props.user;\n    const { weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM } = this.state;\n    window.PatientController.setUserVitals(JSON.stringify({ email, weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM }));\n    this.props.onNotification('Your vitals were submitted!', 'message');\n    this.props.onVitalsUpdate();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { weight, bodyTemp, height, bpSystolic, bpDiastolic, respRate, pulseBPM } = this.state;\n    return (\n      <Wrapper>\n        <Fields>\n          <TextField\n            label=\"Weight\"\n            helperText=\"(kilograms)\"\n            required\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={weight}\n            onChange={(evt) => this.setState({ weight: evt.target.value })}\n          />\n          <TextField\n            label=\"Height\"\n            helperText=\"(centimeters)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={height}\n            onChange={(evt) => this.setState({ height: evt.target.value })}\n          />\n          <TextField\n            label=\"Body Temperature\"\n            helperText=\"(Fahrenheit)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={bodyTemp}\n            onChange={(evt) => this.setState({ bodyTemp: evt.target.value })}\n          />\n          <TextField\n            label=\"Blood Pressure\"\n            helperText=\"(systolic)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={bpSystolic}\n            onChange={(evt) => this.setState({ bpSystolic: evt.target.value })}\n          />\n          <TextField\n            label=\"Blood Pressure\"\n            helperText=\"(diastolic)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={bpDiastolic}\n            onChange={(evt) => this.setState({ bpDiastolic: evt.target.value })}\n          />\n          <TextField\n            label=\"Respiration Rate\"\n            helperText=\"(breaths/min)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={respRate}\n            onChange={(evt) => this.setState({ respRate: evt.target.value })}\n          />\n          <TextField\n            label=\"Pulse\"\n            helperText=\"(beats/min)\"\n            classes={{ root: classes.vitalsInput }}\n            inputProps={{ type: 'number' }}\n            value={pulseBPM}\n            onChange={(evt) => this.setState({ pulseBPM: evt.target.value })}\n          />\n        </Fields>\n        <Options>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            classes={{ root: classes.vitalsButton }}\n            onClick={this.handleSubmitVitals}\n          >\n            Save Vitals\n          </Button>\n        </Options>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  vitalsInput: {\n    margin: 16,\n  },\n  vitalsButton: {\n    width: 200\n  }\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  margin-left: 16px;\n  padding-top: 16px;\n`;\n\nconst Fields = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst Options = styled.div`\n  display: flex;\n  margin-top: 32px;\n`;\n\nexport default withStyles(styles)(Vitals);","import jstat from 'jstat';\n\nfunction generateChartData(chartName, labels, data, styles) {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: chartName,\n        ...styles,\n        data\n      }\n    ]\n  };\n  return chartData;\n}\n\nfunction calculatePercentile(input, avg, std){\n  const zScore = jstat.zscore(input, avg, std);\n  const pValue = jstat.ztest(zScore, 1);\n  return pValue;\n\n}\n\nexport { generateChartData, calculatePercentile };\n","import React, {Component} from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { withTheme } from '@material-ui/core/styles';\nimport { generateChartData } from './util';\n\nclass CompareChart extends Component{\n  render() {\n    const {data, options, theme} = this.props;\n    const accentColor = theme.palette.primary;\n    const styles = {\n      backgroundColor: accentColor.main,\n      borderColor: accentColor.light,\n      borderWidth: 1,\n      hoverBackgroundColor: accentColor.dark,\n      hoverBorderColor: accentColor.main,\n    }\n    return (\n      <Wrapper>\n        <HorizontalBar\n          data={generateChartData(data.title, data.labels, data.values, styles)}\n          height={200}\n          width={800}\n          options={options}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  margin: 0 auto;\n  padding-top: 16px;\n`;\n\nexport default withTheme(CompareChart);\n","\nimport styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-weight: 300;\n  font-size: 24px;\n  margin: 4px 0;\n  color: white;\n`;\n\nconst Text = styled.p`\n  font-size: 16px;\n  color: white;\n`;\n\nconst AlertText = styled.p`\n  font-size: 16px;\n  color: #f55656;\n`;\n\nexport default Text;\n\nexport { Title, AlertText };\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CompareChart from './CompareChart';\nimport Text, {Title, AlertText} from '../Text';\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        vitals : null,\n        averages: null,\n        alerts: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateAlerts();\n  }\n\n  handlePrint = () => {\n    this.props.onNotification('Print job started!');\n    window.PrinterController.print();\n  }\n\n  updateAlerts = () => {\n    const { vitals } = this.props;\n    if (window.NotificationsController && vitals.hasOwnProperty('height')) {\n      const bmiAlert = window.NotificationsController.calculateAdultBMI(vitals.weight.toString(), vitals.height.toString());\n      const bpAlert = window.NotificationsController.bloodPressureChecks(vitals.bpSystolic.toString(), vitals.bpDiastolic.toString());\n      this.setState({ alerts: [bmiAlert, bpAlert] });\n    }\n  }\n\n  generateAlerts = () => {\n    const { alerts } = this.state;\n    const { classes } = this.props;\n    return alerts.map((alert) => (\n      <React.Fragment key={alert}>\n        <Card classes={{ root: classes.card }}>\n          <CardBody>\n            {\n              alert.includes('normal') ? <Text>{alert}</Text> : <AlertText>{alert}</AlertText>\n            }\n          </CardBody>\n        </Card>\n        <Divider />\n      </React.Fragment>\n    ));\n  }\n\n  render() {\n    const { vitals, classes } = this.props;\n    const options = {\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    };\n\n    return (\n      <Wrapper>\n        <Title>Patient Reports</Title>\n        {\n          vitals.weight &&\n          <CompareChart\n            data={{\n              labels: [\"Your Weight\",\"Average Weight\"],\n              title: \"Weight Comparison (kg)\",\n              values: [vitals.weight,\"62\"]\n            }}\n            options={options}\n          />\n        }\n        {\n          vitals.height &&\n          <React.Fragment>\n            <CompareChart\n              data={{\n                labels: [\"Your Height\",\"Average Height\"],\n                title: \"Height Comparison (cm)\",\n                values: [vitals.height,\"175.4\"]\n              }}\n              options={options}\n            />\n            <Divider />\n          </React.Fragment>\n        }\n        {\n          vitals.height && this.generateAlerts()\n        }\n        {\n          !vitals.height && \n          <Row>\n            <Text>No Reports found. Please input your vitals.</Text>\n          </Row>\n        }\n        <Row>\n          {\n            vitals.height &&\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              classes={{ root: classes.vitalsButton }}\n              onClick={this.handlePrint}\n            >\n              Print Report\n            </Button>\n          }\n        </Row>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  vitalsInput: {\n    margin: 16,\n  },\n  vitalsButton: {\n    width: 300\n  },\n  card: {\n    marginTop: 8,\n    width: 800,\n    marginLeft: 32\n  }\n});\n\nconst Wrapper = styled.div`\n  justify-content: center;\n  display: flex;\n  flex-flow: column;\n  margin-left: 16px;\n  padding-top: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  margin: 8px 0;\n`;\n\nconst CardBody = styled.div`\n  margin: 8px;\n  width: 600px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-flow: column;\n  padding: 16px 0;\n  align-items: center;\n`;\n\nexport default withStyles(styles)(Reports);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport Text, {Title, AlertText} from '../Text';\nimport request from 'request-promise';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alerts: [],\n      news: []\n    };\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    request(`https://leonflix.net/api/news/${user.role === 'doctor' ? 'CDC' : 'nurse'}`)\n    .then((data) => {\n      this.setState({ news: JSON.parse(data) });\n    });\n    this.updateAlerts();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { vitals } = this.props;\n    if (prevProps.vitals.height !== vitals.height || prevProps.vitals.weight !== vitals.weight) {\n      this.updateAlerts();\n    }\n  }\n\n  updateAlerts = () => {\n    const { vitals } = this.props;\n    if (window.NotificationsController && vitals.hasOwnProperty('height')) {\n      const bmiAlert = window.NotificationsController.calculateAdultBMI(vitals.weight.toString(), vitals.height.toString());\n      const bpAlert = window.NotificationsController.bloodPressureChecks(vitals.bpSystolic.toString(), vitals.bpDiastolic.toString());\n      this.setState({ alerts: [bmiAlert, bpAlert] });\n    }\n  }\n\n  generateAlerts = () => {\n    const { alerts } = this.state;\n    return alerts.map((alert) => (\n      <React.Fragment>\n        <Card>\n          <CardBody>\n            {\n              alert.includes('normal') ? <Text>{alert}</Text> : <AlertText>{alert}</AlertText>\n            }\n          </CardBody>\n        </Card>\n        <Divider />\n      </React.Fragment>\n    ));\n  }\n\n  generateNews = () => {\n    const { classes } = this.props;\n    const { news } = this.state;\n    return (\n      <List classes={{ root: classes.list }}>\n        {\n          news.map((n) => (\n            <ListItem\n              key={n.link}\n              button\n              classes={{ root: classes.listItem }}\n            >\n              <ListItemContent>\n                <Text>\n                {n.title}\n                </Text>\n              </ListItemContent>\n            </ListItem>\n          ))\n        }\n      </List>\n    )\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { alerts, news } = this.state;\n    return (\n      <Wrapper>\n        <Title>Notifications</Title>\n        {\n          alerts.length === 0 || news.length === 0 ? (\n            <Card>\n            <CardBody>\n              {\n                this.props.user.role === 'patient' && 'You have no health notifications.'\n              }\n              {\n                (this.props.user.role === 'doctor' || this.props.user.role === 'nurse') && news.length === 0 && 'Loading notifications...'\n              }\n              {\n                (this.props.user.role === 'doctor' || this.props.user.role === 'nurse') && this.generateNews()\n              }\n            </CardBody>\n          </Card>\n          ) : this.generateAlerts()\n        }\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  listItem: {\n    color: 'rgba(255, 255, 255, .5)',\n    maxWidth: 600\n  },\n  listItemButton: {\n    color: 'rgba(255, 255, 255, .5)'\n  },\n  list: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    maxHeight: 400,\n  }\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-left: 16px;\n  padding-top: 16px;\n`;\n\nconst CardBody = styled.div`\n  margin: 8px;\n  min-width: 600px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  margin: 8px 0;\n`;\n\nconst ListItemContent = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport default withStyles(styles)(Main);","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Text, {Title} from '../Text';\n\nclass Patients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      allPatients: [],\n      showAddPatient: false\n    };\n  }\n  componentDidMount() {\n    if (window.DoctorController) {\n      this.fetchPatientLists();\n    }\n  }\n\n  fetchPatientLists = () => {\n    const patients = JSON.parse(window.DoctorController.getAssignedPatients(this.props.user.id));\n    const allPatients = JSON.parse(window.PatientController.getAllPatients());\n    const patientsNotAssignedToMe = allPatients.filter((patient) => {\n      return patients.filter(p => p.patientId === patient.id).length === 0;\n    });\n    this.setState({\n      patients,\n      allPatients,\n      selectedAvailablePatient: patientsNotAssignedToMe.length ? patientsNotAssignedToMe[0].id : ''\n    });\n  }\n\n  generatePatientsDropdown = () => {\n    const { allPatients, patients } = this.state;\n    const patientsNotAssignedToMe = allPatients.filter((patient) => {\n      return patients.filter(p => p.patientId === patient.id).length === 0;\n    });\n    return patientsNotAssignedToMe.map((patient) => (\n      <option key={patient.email} value={patient.id}>{patient.firstName} {patient.lastName}</option>\n    ));\n  }\n\n  generateAssignedPatients = () => {\n    const { classes } = this.props;\n    const { patients, allPatients } = this.state;\n    return allPatients.filter((patient) => {\n      return patients.filter(p => p.patientId === patient.id).length > 0;\n    }).map((patient) => (\n      <ListItem\n        key={patient.email}\n        button\n        classes={{ root: classes.listItem }}\n      >\n        <ListItemContent>\n          <Text>\n          {`${patient.firstName} ${patient.lastName}`}\n          </Text>\n          <IconButton\n            classes={{ root: classes.listItemButton }}\n            onClick={() => this.handleUnassignPatient(patient.id)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemContent>\n      </ListItem>\n    ));\n  }\n\n  handleAssignPatient = () => {\n    const { selectedAvailablePatient } = this.state;\n    const setAssign = window.DoctorController.setDoctorPatientMapping(JSON.stringify({\n      doctorId: this.props.user.id,\n      patientId: selectedAvailablePatient\n    }), true);\n    if (setAssign) {\n      this.fetchPatientLists();\n    }\n  }\n\n  handleUnassignPatient = (patientId) => {\n    window.DoctorController.setDoctorPatientMapping(JSON.stringify({\n      doctorId: this.props.user.id,\n      patientId\n    }), false);\n    this.fetchPatientLists();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { patients, selectedAvailablePatient, showAddPatient } = this.state;\n    return (\n      <Wrapper>\n        <Title>My Patients</Title>\n        <Card>\n          <CardBody>\n            {\n              patients.length === 0 ? <Text>There are no patients assigned to you.</Text> :\n              <List>\n                {this.generateAssignedPatients()}\n              </List>\n            }\n          </CardBody>\n        </Card>\n        <Tooltip title=\"Add a Patient\">\n        <Fab\n          color=\"primary\"\n          onClick={() => this.setState({ showAddPatient: true })}\n          classes={{ root: classes.fab }}\n        >\n          <AddIcon />\n        </Fab>\n        </Tooltip>\n        <Dialog\n          open={showAddPatient}\n          onClose={() => this.setState({ showAddPatient: false })}\n        >\n          <DialogContent classes={{ root: classes.dialogContent }}>\n            <Select\n              native\n              autoWidth\n              value={selectedAvailablePatient}\n              onChange={(evt) => this.setState({ selectedAvailablePatient: evt.target.value })}\n            >\n              {this.generatePatientsDropdown()}\n            </Select>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              classes={{ root: classes.button }}\n              onClick={this.handleAssignPatient}\n            >\n              Assign To Me\n            </Button>\n          </DialogContent>\n        </Dialog>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  button: {\n    marginLeft: 16\n  },\n  selectLabel: {\n    margin: 'auto 0',\n    marginRight: 8\n  },\n  listItem: {\n    color: 'rgba(255, 255, 255, .5)'\n  },\n  listItemButton: {\n    color: 'rgba(255, 255, 255, .5)'\n  },\n  dialogContent: {\n    padding: '16px 32px'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: 48,\n    right: 48\n  }\n})\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-left: 16px;\n  padding-top: 16px;\n`;\n\nconst CardBody = styled.div`\n  margin: 8px;\n  min-width: 600px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  margin: 16px 0;\n  margin-bottom: 24px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ListItemContent = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\n\nexport default withStyles(styles)(Patients);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Text, {Title} from '../Text';\nimport Input from '../Input';\nimport drugs from '../../drugs';\nimport {toTitleCase} from './util';\n\nclass Medications extends Component {\n  constructor(props) {\n    super(props);\n    const drugsList = [...new Set(drugs.results.map(d => toTitleCase(d.term.toLowerCase())))];\n    this.state = {\n      patients: [],\n      allPatients: [],\n      showAddPatient: false,\n      selectedPatientData: {},\n      allMeds: drugsList,\n      narrowedMeds: [],\n      selectedMeasurement: 'mg/mL',\n      selectedPatientMedications: [],\n      drugName: '',\n      dosage: '',\n      count: 0\n    };\n  }\n  componentDidMount() {\n    if (window.DoctorController) {\n      this.fetchPatientLists();\n    }\n  }\n\n  fetchPatientLists = () => {\n    const patients = JSON.parse(window.DoctorController.getAssignedPatients(this.props.user.id));\n    const allPatientsData = window.PatientController.getAllPatients();\n    this.setState({\n      patients,\n      allPatients: JSON.parse(allPatientsData),\n    });\n    if (patients.length > 0) {\n      this.handleSelectPatient({ target: { value: patients[0].patientId } });\n    }\n  }\n\n  fetchPatientMedications = (patientId) => {\n    const medicationsData = window.PatientController.getPatientMedications(patientId);\n  }\n\n  generatePatientsDropdown = () => {\n    const { allPatients, patients } = this.state;\n    const patientsAssignedToMe = allPatients.filter((patient) => {\n      return patients.filter(p => p.patientId === patient.id).length > 0;\n    });\n    return patientsAssignedToMe.map((patient) => (\n      <option key={patient.email} value={patient.id}>{patient.firstName} {patient.lastName}</option>\n    ));\n  }\n\n  generateMedications = () => {\n    const { classes } = this.props;\n    const { selectedPatientMedications } = this.state;\n    if (!selectedPatientMedications.length) {\n      return (\n        <Text>This patient has no medications.</Text>\n      )\n    }\n    return selectedPatientMedications.map((med) => (\n      <ListItem\n        key={med.name}\n        button\n      >\n        <ListItemContent>\n          <Text>{`${med.name} ${med.dosage}${med.measurementUnit} ${med.count ? `${med.count}x` : ''}`}</Text>\n          <IconButton\n            classes={{ root: classes.listItemButton }}\n            onClick={() => {\n              window.PatientController.setPatientMedication(JSON.stringify({ name: med.name, patientId: med.patientId }), false);\n              this.handleSelectPatient({ target: { value: med.patientId } });\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemContent>\n      </ListItem>\n    ));\n  }\n\n  handleSelectPatient = (evt) => {\n    const patientId = evt.target.value\n    const patientData = window.PatientController.getPatientById(patientId);\n    const patientMedsData = window.PatientController.getPatientMedications(patientId);\n    this.setState({\n      selectedPatient: patientId,\n      selectedPatientData: JSON.parse(patientData),\n      selectedPatientMedications: JSON.parse(patientMedsData)\n    });\n  }\n\n  handleMedicationSuggestion = (evt) => {\n    const { allMeds } = this.state;\n    const text = evt.target.value;\n    this.setState({ drugName: text });\n    if (!text) {\n      return this.setState({ narrowedMeds: [] });\n    }\n    const possibleMeds = allMeds.filter(m => m.toLowerCase().startsWith(text.toLowerCase()));\n    this.setState({ narrowedMeds: possibleMeds.splice(0, 2) });\n  }\n\n  handleSelectMeasurement = (evt) => {\n    this.setState({ selectedMeasurement: evt.target.value });\n  }\n\n  generateMedSuggestions = () => {\n    return (\n      <List classes={{ root: this.props.classes.suggestionList }}>\n        {\n          this.state.narrowedMeds.map((med) => (\n            <ListItem classes={{root: this.props.classes.suggestionItem }} button key={med} onClick={() => this.setState({ drugName: med, narrowedMeds: [] })}>\n              {med}\n            </ListItem>\n          ))\n        }\n      </List>\n    )\n  }\n\n  handleAddMedication = () => {\n    const { drugName, selectedMeasurement, dosage, count, selectedPatient } = this.state;\n    window.PatientController.setPatientMedication(JSON.stringify({\n      name: drugName,\n      dosage: parseInt(dosage),\n      measurementUnit: selectedMeasurement,\n      isPrescription: selectedMeasurement === 'mg/day',\n      count: parseInt(count),\n      patientId: selectedPatient\n    }), true);\n    this.handleSelectPatient({ target: { value: selectedPatient }});\n    this.setState({\n      drugName: '',\n      dosage: 0,\n      count: 0\n    });\n  }\n\n  render() {\n    const { classes, user } = this.props;\n    const { patients, selectedPatient, selectedPatientData, showAddMedication, selectedMeasurement, narrowedMeds, drugName, dosage, count } = this.state;\n    return (\n      <Wrapper>\n        {\n          user.role === 'doctor' || user.role === 'nurse' ? <Title>Patient Medications</Title> :\n          <Title>My Medications</Title>\n        }\n        {\n          (user.role === 'doctor' || user.role === 'nurse') &&\n          <Select\n            native\n            value={selectedPatient}\n            onChange={this.handleSelectPatient}\n          >\n            {this.generatePatientsDropdown()}\n          </Select>\n        }\n        <Card classes={{ root: classes.card }}>\n          <CardBody>\n            {\n              patients.length === 0 ? <Text>There are no patients assigned to you.</Text> :\n              <React.Fragment>\n                {\n                  selectedPatientData.propertyIsEnumerable('firstName') &&\n                  <React.Fragment>\n                    <Text>{selectedPatientData.firstName} {selectedPatientData.lastName}&apos;s Medications</Text>\n                    <List>\n                      {this.generateMedications()}\n                    </List>\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            }\n          </CardBody>\n        </Card>\n        <Tooltip title=\"Add Medication\">\n        <Fab\n          color=\"primary\"\n          onClick={() => this.setState({ showAddMedication: true })}\n          classes={{ root: classes.fab }}\n        >\n          <AddIcon />\n        </Fab>\n        </Tooltip>\n        <Dialog\n          open={showAddMedication}\n          onClose={() => this.setState({ showAddMedication: false })}\n        >\n          <DialogContent classes={{ root: classes.dialogContent }}>\n            <Row>\n              <AutoComplete>\n                <Input\n                  type=\"text\"\n                  ref={(inp) => this.medInput = inp}\n                  value={drugName}\n                  onChange={this.handleMedicationSuggestion}\n                  placeholder=\"Drug Name\"\n                />\n                {\n                  narrowedMeds.length > 0 && this.generateMedSuggestions()\n                }\n              </AutoComplete>\n            </Row>\n            <Row>\n              <Input\n                className={classes.dosageInput}\n                type=\"text\"\n                ref={(inp) => this.medInput = inp}\n                value={dosage}\n                onChange={(evt) => this.setState({ dosage: evt.target.value })}\n                placeholder=\"Dosage\"\n              />\n              <Select\n                native\n                autoWidth\n                value={selectedMeasurement}\n                onChange={this.handleSelectMeasurement}\n              >\n                {\n                  user.role === 'doctor' && <option value=\"mg/day\">mg/day</option>\n                }\n                <option value=\"mg/mL\">mg/mL</option>\n              </Select>\n            </Row>\n            {\n              selectedMeasurement === 'mg/day' &&\n              <Row>\n                <Input\n                  type=\"number\"\n                  ref={(inp) => this.countInput = inp}\n                  value={count}\n                  onChange={(evt) => this.setState({ count: evt.target.value })}\n                  placeholder=\"Count\"\n                />\n              </Row>\n            }\n            <Row>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                classes={{ root: classes.button }}\n                onClick={this.handleAddMedication}\n              >\n                Add Medication\n              </Button>\n            </Row>\n          </DialogContent>\n        </Dialog>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = ({\n  card: {\n    margin: '8px 0'\n  },\n  button: {\n    width: '100%'\n  },\n  selectLabel: {\n    margin: 'auto 0',\n    marginRight: 8\n  },\n  listItem: {\n    color: 'rgba(255, 255, 255, .5)'\n  },\n  listItemButton: {\n    color: 'rgba(255, 255, 255, .5)'\n  },\n  dialogContent: {\n    padding: '16px 32px',\n    display: 'flex',\n    flexFlow: 'column',\n    zIndex: 10,\n  },\n  fab: {\n    position: 'fixed',\n    bottom: 48,\n    right: 48\n  },\n  dosageInput: {\n    width: 56,\n    marginRight: 16\n  },\n  suggestionList: {\n    position: 'absolute',\n    zIndex: 1000,\n    background: 'white',\n    color: '#333',\n    width: '220px',\n    top: 64,\n    borderRadius: 8\n  },\n  suggestionItem: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textTransform: 'capitalize',\n    '&:hover': {\n      background: 'rgba(0, 0, 0, .3)'\n    }\n  }\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-left: 16px;\n  padding-top: 16px;\n`;\n\nconst CardBody = styled.div`\n  margin: 8px;\n  min-width: 600px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  margin: 8px 0;\n`;\n\nconst ListItemContent = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst AutoComplete = styled.div`\n  display: flex;\n  flex-flow: column;\n`;\n\n\nexport default withStyles(styles)(Medications);\n","export function toTitleCase(str) {\n   return str.split(/\\s+/).map( s => s.charAt( 0 ).toUpperCase() + s.substring(1).toLowerCase() ).join( \" \" );\n}\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PatientsIcon from '@material-ui/icons/SupervisorAccount';\nimport VitalsIcon from '@material-ui/icons/Equalizer';\nimport ReportsIcon from '@material-ui/icons/Assignment';\nimport PowerIcon from '@material-ui/icons/PowerSettingsNew';\nimport MedicationsIcon from '@material-ui/icons/ListAlt';\nimport { withStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport Vitals from '../Vitals';\nimport Reports from '../Reports';\nimport Main from '../Main';\nimport Patients from '../Patients';\nimport Medications from '../Medications';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: '#main',\n      vitals: {}\n    };\n  }\n\n  componentDidMount() {\n    if (window.PatientController) {\n      const vitalsString = window.PatientController.getUserVitals(this.props.user.email);\n      if (vitalsString) {\n        const vitals = JSON.parse(vitalsString);\n        if (vitals) {\n          this.setState({ vitals });\n        }\n      }\n    }\n  }\n\n  handleSetPage = (page) => this.setState({ page });\n\n  handleVitalsChange = () => {\n    const vitalsString = window.PatientController.getUserVitals(this.props.user.email);\n    if (vitalsString) {\n      const vitals = JSON.parse(vitalsString);\n      if (vitals) {\n        this.setState({ vitals });\n      }\n    }\n  }\n\n  render() {\n    const { classes, user } = this.props;\n    const { page, vitals } = this.state;\n    return (\n      <Wrapper>\n        <NavigationBar>\n          <Tooltip title=\"Main\" placement=\"right\">\n            <IconButton\n              classes={{ root: page === '#main' ? classes.selectedNavButton : classes.navButton }}\n              onClick={() => this.handleSetPage('#main')}\n            >\n              <HomeIcon />\n            </IconButton>\n          </Tooltip>\n          {\n            (user.role === 'doctor' || user.role === 'nurse') &&\n            <React.Fragment>\n              <Tooltip title=\"Patients\" placement=\"right\">\n                <IconButton\n                  classes={{ root: page === '#patients' ? classes.selectedNavButton : classes.navButton }}\n                  onClick={() => this.handleSetPage('#patients')}\n                >\n                  <PatientsIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Medications\" placement=\"right\">\n                <IconButton\n                  classes={{ root: page === '#medications' ? classes.selectedNavButton : classes.navButton }}\n                  onClick={() => this.handleSetPage('#medications')}\n                >\n                  <MedicationsIcon />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          }\n          {\n            user.role === 'patient' &&\n            <React.Fragment>\n              <Tooltip title=\"Reports\" placement=\"right\">\n                <IconButton\n                  classes={{ root: page === '#reports' ? classes.selectedNavButton : classes.navButton }}\n                  onClick={() => this.handleSetPage('#reports')}\n                >\n                  <ReportsIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Vitals\" placement=\"right\">\n                <IconButton\n                  classes={{ root: page === '#vitals' ? classes.selectedNavButton : classes.navButton }}\n                  onClick={() => this.handleSetPage('#vitals')}\n                >\n                  <VitalsIcon />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          }\n          <Tooltip title=\"Logout\" placement=\"right\">\n            <IconButton\n              classes={{ root: page === '#settings' ? classes.selectedNavButton : classes.navButton }}\n              onClick={this.props.onLogOut}\n            >\n              <PowerIcon />\n            </IconButton>\n          </Tooltip>\n        </NavigationBar>\n        <PageContainer>\n          {\n            page === '#main' && <Main user={this.props.user} vitals={vitals} onNotification={this.props.onNotification} />\n          }\n          {\n            page === '#vitals' && <Vitals user={this.props.user} vitals={vitals} onVitalsUpdate={this.handleVitalsChange} onNotification={this.props.onNotification} />\n          }\n          {\n            page === '#reports' && <Reports user={this.props.user} vitals={vitals} onNotification={this.props.onNotification} />\n          }\n          {\n            page === '#patients' && <Patients user={this.props.user} onNotification={this.props.onNotification}  />\n          }\n          {\n            page === '#medications' && <Medications user={this.props.user} onNotification={this.props.onNotification} />\n          }\n        </PageContainer>\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = theme => ({\n  navButton: {\n    marginTop: '1.5em',\n    color: 'rgb(29, 38, 43)'\n  },\n  selectedNavButton: {\n    marginTop: '1.5em',\n    color: theme.palette.primary.light,\n  }\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst NavigationBar = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  height: 100%;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 80px;\n  background: rgb(57, 65, 70);\n  box-shadow: -1px -2px 41px -3px rgba(0,0,0,0.83);\n  -webkit-box-shadow: -1px -2px 41px -3px rgba(0,0,0,0.83);\n  -moz-box-shadow: -1px -2px 41px -3px rgba(0,0,0,0.83);\n  transition: 150ms ease-in;\n`;\n\nconst PageContainer = styled.div`\n  margin-left: 80px;\n  width: calc(100vw - 80px);\n`;\n\nexport default withStyles(styles)(Home);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#2196F3'\n    },\n    secondary: {\n      main: '#2dc469'\n    }\n  },\n  background: {\n    paper: 'rgb(57, 65, 70)',\n    default: 'rgb(57, 65, 70)'\n  },\n  overrides: {\n    MuiButton: {\n      containedSecondary: {\n        color: 'white',\n      }\n    },\n    MuiPaper: {\n      root: {\n        background: 'rgb(57,65,70)',\n      }\n    },\n    MuiSnackbar: {\n      root: {\n        background: 'rgb(67, 75, 80)',\n      }\n    }\n  }\n});\n\nexport default muiTheme;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport muiTheme from './mui-theme';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      path: 'login',\n      showSnack: false,\n      snackData: { message: 'Login failed.', type: 'error' },\n      user: { firstName: 'Student', lastName: 'Jackson', email: 'student@psu.edu', role: 'patient' }\n    };\n  }\n\n  handleSnackbarClose = () => this.setState({ showSnack: false });\n\n  handleShowSnack = (message, type = 'regular') => {\n    this.setState({\n      showSnack: true,\n      snackData: { message, type }\n    });\n  }\n\n  handleLoggedIn = (user) => {\n    this.setState({\n      user,\n      path: 'home'\n    });\n  }\n\n  handleLogOut = () => this.setState({ path: 'login', user: {} });\n\n  render() {\n    const { path, showSnack, snackData, user } = this.state;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={muiTheme}>\n        <Wrapper>\n          {\n            path === 'login' &&\n            <Login onNotification={this.handleShowSnack} onLoggedIn={this.handleLoggedIn} />\n          }\n          {\n            path === 'home' &&\n            <Home user={user} onLogOut={this.handleLogOut} onNotification={this.handleShowSnack} />\n          }\n        </Wrapper>\n        <Snackbar\n          className=\"snack\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          classes={{ anchorOriginBottomRight: classes.snackbar }}\n          open={showSnack}\n          autoHideDuration={5000}\n          onClose={this.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<SnackMessage id=\"message-id\" type={snackData.type}>{snackData.message}</SnackMessage>}\n        />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = ({\n  snackbar: {\n    backgroundColor: 'inherit',\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst SnackMessage = styled.span`\n  font-weight: bold;\n  color: ${({type}) => type === 'error' ? '#e87272' : 'rgb(29, 38, 43)'};\n`;\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}